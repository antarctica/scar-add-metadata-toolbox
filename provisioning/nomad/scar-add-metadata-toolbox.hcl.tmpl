# SCAR ADD Metadata Toolbox
#
# Nomad source: https://www.nomadproject.io/docs/job-specification/job.html
job "scar-add-metadata-toolbox" {
    region = "bas"
    datacenters = ["cambridge"]
    type = "service"

    # Application instances
    #
    # Nomad guide: https://www.nomadproject.io/docs/job-specification/group.html
    group "app" {
        count = 1

        restart {
            attempts = 2
            interval = "30m"
            delay = "15s"
            mode = "fail"
        }

        ephemeral_disk {
            size = 200
        }

        # Flask application server
        #
        # Nomad guide: https://www.nomadproject.io/docs/job-specification/task.html
        task "flask-app" {
            driver = "docker"

            env {
                SENTRY_DSN = "https://db9543e7b68f4b2596b189ff444438e3@o39753.ingest.sentry.io/5197036"
                AUTH_CLIENT_TENANCY = "https://login.microsoftonline.com/b311db95-32ad-438f-a101-7ba061712a4e"
                AUTH_CLIENT_ID = "91c284e7-6522-4eb4-9943-f4ec08e98cb9"
                AUTH_CLIENT_SCOPES = "api://8bfe65d3-9509-4b0a-acd2-8ce8cdc0c01e/BAS.MAGIC.ADD.Access"
                AUTH_SERVER_TENANCY = "b311db95-32ad-438f-a101-7ba061712a4e"
                AUTH_SERVER_ID = "8b45581e-1b2e-4b8c-b667-e5a1360b6906"
                CSW_ENDPOINT_UNPUBLISHED = "http://10.70.1.140:5001/csw/unpublished"
                CSW_ENDPOINT_PUBLISHED= "http://10.70.1.140:5001/csw/published"
                CSW_UNPUBLISHED_DB_CONNECTION = "${app_csw_connection_string_unpublished}"
                CSW_PUBLISHED_DB_CONNECTION = "${app_csw_connection_string_published}"
                STATIC_BUILD_DIR = "./scar_add_metadata_toolbox/build"
                S3_BUCKET = "${app_s3_static_site_bucket}"
            }

            config {
                auth {
                    username = "nomad",
                    password = "${registry_token}",
                    server_address = "docker-registry.data.bas.ac.uk",
                }

                image = "${registry_image}"
                args = [
                    "run",
                    "--host",
                    "0.0.0.0",
                ]
                port_map {
                    flask = 5000
                }
            }

            resources {
                memory = 256

                network {
                    mbits = 10

                    port  "flask"  {
                        static = 5001
                    }
                }
            }
        }
    }
}
