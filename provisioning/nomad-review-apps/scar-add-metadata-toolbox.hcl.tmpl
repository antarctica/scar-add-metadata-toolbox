# SCAR ADD Metadata Toolbox (Review App)
#
# Nomad source: https://www.nomadproject.io/docs/job-specification/job.html
job "${job_name}" {
    region = "bas"
    datacenters = ["cambridge"]
    type = "service"

    # Application instances
    #
    # Nomad guide: https://www.nomadproject.io/docs/job-specification/group.html
    group "app" {
        count = 1

        restart {
            attempts = 2
            interval = "30m"
            delay = "15s"
            mode = "fail"
        }

        ephemeral_disk {
            size = 200
        }

        # Flask application server
        #
        # Nomad guide: https://www.nomadproject.io/docs/job-specification/task.html
        task "flask-app" {
            driver = "docker"

            env {
                APP_LOGGING_LEVEL="debug"
                APP_AUTH_SESSION_FILE_PATH="$${NOMAD_TASK_DIR}/auth.json"
                APP_COLLECTIONS_PATH="$${NOMAD_TASK_DIR}/collections.json"
                APP_SITE_PATH="$${NOMAD_TASK_DIR}/_site"
                CSW_ENDPOINT_UNPUBLISHED="http://localhost:5000/csw/unpublished"
                CSW_ENDPOINT_PUBLISHED="http://localhost:5000/csw/published"
                CSW_SERVER_CONFIG_UNPUBLISHED_ENDPOINT="http://$${NOMAD_ADDR_flask}/csw/unpublished"
                CSW_SERVER_CONFIG_PUBLISHED_ENDPOINT="http://$${NOMAD_ADDR_flask}/csw/published"
                CSW_SERVER_CONFIG_UNPUBLISHED_DATABASE_CONNECTION="${app_csw_connection_string_unpublished}"
                CSW_SERVER_CONFIG_PUBLISHED_DATABASE_CONNECTION="${app_csw_connection_string_published}"
                APP_S3_BUCKET="${app_s3_static_site_bucket}"
            }

            config {
                auth {
                    username = "nomad",
                    password = "${registry_token}",
                    server_address = "docker-registry.data.bas.ac.uk",
                }

                image = "${registry_image}"
                args = [
                    "run",
                    "--host",
                    "0.0.0.0",
                ]
                port_map {
                    flask = 5000
                }
            }

            resources {
                memory = 256

                network {
                    mbits = 10

                    port  "flask"  {}
                }
            }
        }
    }
}
